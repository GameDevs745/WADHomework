// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TerrariaWiki.Data;

#nullable disable

namespace TerrariaWiki.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240401171348_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TerrariaWiki.Models.BiomeInformation", b =>
                {
                    b.Property<int>("BiomeInformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BiomeInformationID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsHardmode")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trivia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BiomeInformationID");

                    b.ToTable("BiomeInformations");
                });

            modelBuilder.Entity("TerrariaWiki.Models.ItemInformation", b =>
                {
                    b.Property<int>("ItemInformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemInformationID"));

                    b.Property<int>("CopperValue")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GoldValue")
                        .HasColumnType("int");

                    b.Property<bool>("HasValue")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHardmode")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlatinumValue")
                        .HasColumnType("int");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<int>("SellingNpcId")
                        .HasColumnType("int");

                    b.Property<int>("SellingNpcNpcInformationId")
                        .HasColumnType("int");

                    b.Property<int>("SilverValue")
                        .HasColumnType("int");

                    b.Property<string>("Trivia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemInformationID");

                    b.HasIndex("SellingNpcId");

                    b.HasIndex("SellingNpcNpcInformationId");

                    b.ToTable("ItemInformations");
                });

            modelBuilder.Entity("TerrariaWiki.Models.MobInformation", b =>
                {
                    b.Property<int>("MobInformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MobInformationID"));

                    b.Property<int>("BiomeInformationID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBoss")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpawnItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trivia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MobInformationID");

                    b.HasIndex("BiomeInformationID");

                    b.ToTable("MobInformations");
                });

            modelBuilder.Entity("TerrariaWiki.Models.NpcInformation", b =>
                {
                    b.Property<int>("NpcInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NpcInformationId"));

                    b.Property<int>("BiomeInformationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Housing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsHardmode")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<string>("Trivia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NpcInformationId");

                    b.HasIndex("BiomeInformationID");

                    b.ToTable("NpcInformations");
                });

            modelBuilder.Entity("TerrariaWiki.Models.StructureInformation", b =>
                {
                    b.Property<int>("StructureInformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StructureInformationID"));

                    b.Property<int>("BiomeInformationID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasLoot")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemNeededForAccess")
                        .HasColumnType("bit");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trivia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StructureInformationID");

                    b.HasIndex("BiomeInformationID");

                    b.ToTable("StructureInformations");
                });

            modelBuilder.Entity("TerrariaWiki.Models.VersionChanges", b =>
                {
                    b.Property<string>("VersionChangesID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMajorVersion")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VersionChangesID");

                    b.ToTable("VersionChanges");
                });

            modelBuilder.Entity("TerrariaWiki.Models.ItemInformation", b =>
                {
                    b.HasOne("TerrariaWiki.Models.NpcInformation", null)
                        .WithMany("ItemsToSell")
                        .HasForeignKey("SellingNpcId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TerrariaWiki.Models.NpcInformation", "SellingNpc")
                        .WithMany()
                        .HasForeignKey("SellingNpcNpcInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SellingNpc");
                });

            modelBuilder.Entity("TerrariaWiki.Models.MobInformation", b =>
                {
                    b.HasOne("TerrariaWiki.Models.BiomeInformation", "BiomeToSpawn")
                        .WithMany("MobsInBiome")
                        .HasForeignKey("BiomeInformationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BiomeToSpawn");
                });

            modelBuilder.Entity("TerrariaWiki.Models.NpcInformation", b =>
                {
                    b.HasOne("TerrariaWiki.Models.BiomeInformation", "Biome")
                        .WithMany("NpcsInBiome")
                        .HasForeignKey("BiomeInformationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Biome");
                });

            modelBuilder.Entity("TerrariaWiki.Models.StructureInformation", b =>
                {
                    b.HasOne("TerrariaWiki.Models.BiomeInformation", "Biome")
                        .WithMany("StructuresInBiome")
                        .HasForeignKey("BiomeInformationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Biome");
                });

            modelBuilder.Entity("TerrariaWiki.Models.BiomeInformation", b =>
                {
                    b.Navigation("MobsInBiome");

                    b.Navigation("NpcsInBiome");

                    b.Navigation("StructuresInBiome");
                });

            modelBuilder.Entity("TerrariaWiki.Models.NpcInformation", b =>
                {
                    b.Navigation("ItemsToSell");
                });
#pragma warning restore 612, 618
        }
    }
}
